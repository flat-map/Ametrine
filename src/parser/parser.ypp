%skeleton "lalr1.cc"
%require "3.5.1"
%defines
%define api.parser.class {MyParser}
%parse-param {MyLexer &lexer}
%lex-param   {MyLexer &lexer}

%code requires {
	#include <string>
	using std::string;
	class MyLexer;
}

%code {
	#include <src/lexer/lexer.hpp>
	int yylex(
		yy::MyParser::semantic_type* yylval,
		yy::MyParser::location_type* location,
		MyLexer& lexer
	);
}

%locations
%define api.value.type variant
%define parse.error verbose

%token <double> NUMBER "number"
%type <double> expression
%token
	PLUS "+"

%start module;

%%

module:
	expression {std::cout << $1 << std::endl;}

expression:
	"number"

%%

void yy::MyParser::error(
	const location_type& loc,
	const string& msg) {
	std::cerr << loc << ": " << msg << std::endl;
}